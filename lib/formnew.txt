import 'package:flutter/material.dart';
import 'package:supabase_flutter/supabase_flutter.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(brightness: Brightness.dark),
      home: MyFormPage(),
    );
  }
}

class MyFormPage extends StatefulWidget {
  @override
  _MyFormPageState createState() => _MyFormPageState();
}

class _MyFormPageState extends State<MyFormPage> {
  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();
  String name = "";
  String brand = "";
  String clr = "";
  String reg_num = "";
  String? _selectedOption; // Make it nullable
  DateTime? _selectedDate;
  bool _isStudent = false;
  Future<void> regnumber(String reg_num) async {
    await Supabase.instance.client
        .from('vehicle_details')
        .insert({'reg_num': reg_num});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Data Entry page'),
        //theme: ThemeData(brightness: Brightness.dark),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                onFieldSubmitted: (value) {
                  regnumber(value);
                },
                decoration: InputDecoration(
                  labelText: 'Registration number',
                  filled: true,
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the registration num';
                  }
                  return null;
                },
                onSaved: (value) {
                  reg_num = value!;
                },
              ),
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'name',
                  filled: true,
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter your name';
                  }
                  return null;
                },
                onSaved: (value) {
                  name = value!;
                },
              ),
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'brand',
                  filled: true,
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the brand';
                  }
                  return null;
                },
                onSaved: (value) {
                  brand = value!;
                },
              ),
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'colur',
                  filled: true,
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the color';
                  }
                  return null;
                },
                onSaved: (value) {
                  clr = value!;
                },
              ),
              SizedBox(height: 16),
              DropdownButtonFormField<String>(
                value: _selectedOption,
                items: ['Two Wheeler', 'Four Wheeler', 'Others']
                    .map((option) => DropdownMenuItem(
                          child: Text(option),
                          value: option,
                        ))
                    .toList(),
                onChanged: (value) {
                  setState(() {
                    _selectedOption = value;
                  });
                },
                decoration: InputDecoration(
                  labelText: 'Select an option',
                  filled: true,
                ),
              ),
              SizedBox(height: 16),
              SizedBox(height: 16),
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'Phone Number',
                  filled: true,
                ),
                keyboardType: TextInputType.phone,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter your phone number';
                  }
                  // You can add more phone number validation if needed
                  return null;
                },
              ),
              SizedBox(height: 16),
              Row(
                children: [
                  Text('Check this box if Indian'),
                  SizedBox(width: 16),
                  Checkbox(
                    value: _isStudent,
                    onChanged: (value) {
                      setState(() {
                        _isStudent = value!;
                      });
                    },
                  ),
                ],
              ),
              SizedBox(height: 16),
              Row(
                children: [
                  Text('Select a date:'),
                  SizedBox(width: 16),
                  ElevatedButton(
                    onPressed: () async {
                      DateTime? pickedDate = await showDatePicker(
                        context: context,
                        initialDate: DateTime.now(),
                        firstDate: DateTime(2000),
                        lastDate: DateTime(2101),
                      );
                      if (pickedDate != null && pickedDate != _selectedDate) {
                        setState(() {
                          _selectedDate = pickedDate;
                        });
                      }
                    },
                    child: Text(
                      _selectedDate != null
                          ? '$_selectedDate'
                          : 'Choose a date',
                    ),
                  ),
                ],
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    _formKey.currentState!.save();
                    // Handle form submission here
                    // You can use _name, _selectedOption, etc., for further processing
                  }
                },
                child: Text('Submit'),
              ),
              IconButton(
                onPressed: () {
                  showDialog(
                      context: context,
                      builder: (context) {
                        return SimpleDialog(
                          title: Text('Add'),
                          children: [
                            TextFormField(onFieldSubmitted: (value) async {
                              await regnumber(value);
                              if (mounted) Navigator.pop(context);
                            }),
                          ],
                        );
                      });
                },
                icon: Icon(Icons.edit),
              ),
            ],
          ),
        ),
      ),
    );
  }
}



floatingActionButton: FloatingActionButton(
        onPressed: () {
          showDialog(
              context: context,
              builder: (context) {
                return SimpleDialog(
                  title: Text('Add New checkpost'),
                  children: [
                    TextFormField(
                      onFieldSubmitted: (value) {
                        createnote(value);
                        if (mounted) Navigator.pop(context);
                      },
                    )
                  ],
                );
              });
        },
        child: Icon(Icons.add),
      ),